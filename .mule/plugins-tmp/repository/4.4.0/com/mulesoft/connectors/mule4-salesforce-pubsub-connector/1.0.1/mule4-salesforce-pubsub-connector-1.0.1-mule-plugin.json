{
  "minMuleVersion": "4.3.0",
  "extensionModel": {
    "types": [
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["com.mulesoft.connector.salesforce.pubsub.api.param.ReplayOption"],
            "parent": "",
            "classname": "com.mulesoft.connector.salesforce.pubsub.api.param.CustomReplayIdReplayOption",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "com.mulesoft.connector.salesforce.pubsub.api.param.CustomReplayIdReplayOption",
          "typeAlias": {"value": "CustomReplayId"}
        },
        "type": "Object",
        "fields": [{
          "annotations": {
            "display": {"displayModel": {
              "summary": "Subscriber receives all events after the event specified by its replayId value",
              "displayName": "Replay Id"
            }},
            "expressionSupport": {"value": "SUPPORTED"}
          },
          "model": {
            "annotations": {
              "classInformation": {
                "implementedInterfaces": ["java.lang.Comparable"],
                "parent": "java.lang.Number",
                "classname": "java.lang.Long",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": true,
                "genericTypes": [],
                "isInterface": false,
                "isAbstract": false,
                "isMap": false
              },
              "int": {}
            },
            "type": "Number"
          },
          "key": {
            "name": "replayId",
            "required": "true"
          }
        }]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["com.mulesoft.connector.salesforce.pubsub.api.param.ReplayOption"],
            "parent": "",
            "classname": "com.mulesoft.connector.salesforce.pubsub.api.param.EarliestReplayOption",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "com.mulesoft.connector.salesforce.pubsub.api.param.EarliestReplayOption",
          "typeAlias": {"value": "Earliest"}
        },
        "type": "Object",
        "fields": []
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["com.mulesoft.connector.salesforce.pubsub.api.param.ReplayOption"],
            "parent": "",
            "classname": "com.mulesoft.connector.salesforce.pubsub.api.param.FromOsReplayIdReplayOption",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "com.mulesoft.connector.salesforce.pubsub.api.param.FromOsReplayIdReplayOption",
          "typeAlias": {"value": "ReplayIdFromObjectStore"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "Name of the object store from where to get the latest replay id",
                "displayName": "Object Store Name"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {
              "name": "osName",
              "required": "true"
            }
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "Name of the key that contains the latest replay id",
                "displayName": "Object Store Key"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {
              "name": "osKey",
              "required": "true"
            }
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["com.mulesoft.connector.salesforce.pubsub.api.param.ReplayOption"],
            "parent": "",
            "classname": "com.mulesoft.connector.salesforce.pubsub.api.param.LatestReplayOption",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "com.mulesoft.connector.salesforce.pubsub.api.param.LatestReplayOption",
          "typeAlias": {"value": "Latest"}
        },
        "type": "Object",
        "fields": []
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "",
            "classname": "com.mulesoft.connector.salesforce.pubsub.api.param.ProxyConfiguration",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "com.mulesoft.connector.salesforce.pubsub.api.param.ProxyConfiguration",
          "typeAlias": {"value": "ProxyConfiguration"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {
              "display": {"displayModel": {"displayName": "Proxy host"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {
              "name": "host",
              "required": "true"
            }
          },
          {
            "annotations": {
              "display": {"displayModel": {"displayName": "Proxy port"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {
              "name": "port",
              "required": "true"
            }
          },
          {
            "annotations": {
              "display": {"displayModel": {"displayName": "Proxy username"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "username"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": true,
                "query": false,
                "text": false
              }},
              "display": {"displayModel": {"displayName": "Proxy password"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "password"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "",
            "classname": "com.mulesoft.connector.salesforce.pubsub.api.param.ReplayOption",
            "hasDefaultConstructor": false,
            "isInstantiable": false,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": true,
            "isAbstract": true,
            "isMap": false
          },
          "typeId": "com.mulesoft.connector.salesforce.pubsub.api.param.ReplayOption",
          "stereotype": {"allowedStereotypes": [{
            "namespace": "SALESFORCE-PUB-SUB",
            "type": "REPLAY_OPTION"
          }]},
          "typeAlias": {"value": "ReplayOption"}
        },
        "type": "Object",
        "fields": []
      }
    ],
    "messageSources": [],
    "functions": [],
    "configurations": [{
      "displayModel": {"displayName": "Config"},
      "externalLibraryModels": [],
      "operations": [
        {
          "semanticTerms": [],
          "kind": "operation",
          "executionType": "CPU_LITE",
          "description": "Publish the given list of events to the specified event topic. Only high-volume platform events, including real-time event monitoring events and change data capture events are allowed.",
          "modelProperties": {
            "metadataKeyId": {
              "parameterName": "topic",
              "type": {
                "format": "java",
                "type": "String"
              },
              "categoryName": "EventMetadataResolversCategory"
            },
            "typeResolversInformation": {
              "partialTypeKeyResolver": false,
              "inputResolvers": {"events": {
                "resolverName": "com.mulesoft.connector.salesforce.pubsub.internal.metadata.EventMetadataResolver",
                "requiresConnection": true,
                "requiresConfiguration": true
              }},
              "outputResolver": {
                "resolverName": "com.mulesoft.connector.salesforce.pubsub.internal.metadata.EventMetadataResolver",
                "requiresConnection": true,
                "requiresConfiguration": true
              },
              "keysResolver": {
                "resolverName": "TopicMetadataResolver",
                "requiresConnection": true,
                "requiresConfiguration": true
              },
              "category": "EventMetadataResolversCategory"
            }
          },
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the topic used for message publishing.",
                  "modelProperties": {"org.mule.runtime.extension.api.property.MetadataKeyPartModelProperty": {
                    "providedByKeyResolver": true,
                    "order": 1
                  }},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "topic",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "A list of events to be published that match the schema of the current topic.",
                  "modelProperties": {},
                  "type": {
                    "item": {
                      "annotations": {"classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "java.util.Map",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [
                          "java.lang.String",
                          "java.lang.Object"
                        ],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": true
                      }},
                      "type": "Object",
                      "fields": [],
                      "open": {
                        "annotations": {
                          "classInformation": {
                            "implementedInterfaces": [],
                            "parent": "",
                            "classname": "java.lang.Object",
                            "hasDefaultConstructor": true,
                            "isInstantiable": true,
                            "isFinal": false,
                            "genericTypes": [],
                            "isInterface": false,
                            "isAbstract": false,
                            "isMap": false
                          },
                          "typeId": "java.lang.Object",
                          "typeAlias": {"value": "Object"}
                        },
                        "type": "Object",
                        "fields": []
                      }
                    },
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["java.util.Map"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": true,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "events",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                    },
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "SALESFORCE-PUB-SUB",
                    "type": "PUBSUB-CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Error Mappings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Set of error mappings",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 12},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "error-mappings",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }},
                  "sinceMuleVersion": {"version": "4.4.0"}
                },
                "type": {
                  "item": {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "errorMapping"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {
                            "typeId": "errorTypeMatcher",
                            "enum": {
                              "values": [
                                "ANY",
                                "REDELIVERY_EXHAUSTED",
                                "TRANSFORMATION",
                                "EXPRESSION",
                                "SECURITY",
                                "CLIENT_SECURITY",
                                "SERVER_SECURITY",
                                "ROUTING",
                                "CONNECTIVITY",
                                "RETRY_EXHAUSTED",
                                "TIMEOUT"
                              ],
                              "type": "[Ljava.lang.String;"
                            }
                          },
                          "type": "String"
                        },
                        "key": {"name": "source"}
                      },
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {"typeId": "errorTypeDefinition"},
                          "type": "String"
                        },
                        "key": {
                          "name": "target",
                          "required": "true"
                        }
                      }
                    ]
                  },
                  "format": "java",
                  "annotations": {
                    "typeDsl": {
                      "allowTopLevelDefinition": false,
                      "allowInlineDefinition": true
                    },
                    "infrastructureType": {},
                    "description": {"value": "Determines that an error thrown by this operation should be mapped to another"}
                  },
                  "type": "Array"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "errorMappings",
                "layoutModel": {
                  "password": false,
                  "tabName": "Error Mapping",
                  "query": false,
                  "text": false,
                  "order": 6
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 4
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect-forever"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ReconnectionStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": true,
            "description": "",
            "modelProperties": {},
            "type": {
              "item": {
                "annotations": {"classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "java.util.Map",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [
                    "java.lang.String",
                    "java.lang.Object"
                  ],
                  "isInterface": true,
                  "isAbstract": true,
                  "isMap": true
                }},
                "type": "Object",
                "fields": [],
                "open": {
                  "annotations": {
                    "classInformation": {
                      "implementedInterfaces": [],
                      "parent": "",
                      "classname": "java.lang.Object",
                      "hasDefaultConstructor": true,
                      "isInstantiable": true,
                      "isFinal": false,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": false,
                      "isMap": false
                    },
                    "typeId": "java.lang.Object",
                    "typeAlias": {"value": "Object"}
                  },
                  "type": "Object",
                  "fields": []
                }
              },
              "format": "java",
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.util.Collection"],
                "parent": "",
                "classname": "java.util.List",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": ["java.util.Map"],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": false,
          "name": "publishEvent",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "SALESFORCE-PUB-SUB",
              "type": "PROCESSOR"
            },
            "namespace": "SALESFORCE-PUB-SUB",
            "type": "PUBLISH_EVENT"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "SALESFORCE-PUB-SUB:RETRY_EXHAUSTED",
            "SALESFORCE-PUB-SUB:SECURITY",
            "MULE:ANY",
            "SALESFORCE-PUB-SUB:CONNECTIVITY",
            "SALESFORCE-PUB-SUB:SERVER_ERROR",
            "SALESFORCE-PUB-SUB:INVALID_INPUT"
          ]
        },
        {
          "semanticTerms": [],
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Deletes all the access token information of a given resource owner id so that it's impossible to execute any operation for that user without doing the authorization dance again",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The id of the resource owner which access should be invalidated",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "resourceOwnerId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                    },
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "SALESFORCE-PUB-SUB",
                    "type": "PUBSUB-CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Error Mappings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Set of error mappings",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 12},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "error-mappings",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }},
                  "sinceMuleVersion": {"version": "4.4.0"}
                },
                "type": {
                  "item": {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "errorMapping"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {
                            "typeId": "errorTypeMatcher",
                            "enum": {
                              "values": [
                                "ANY",
                                "REDELIVERY_EXHAUSTED",
                                "TRANSFORMATION",
                                "EXPRESSION",
                                "SECURITY",
                                "CLIENT_SECURITY",
                                "SERVER_SECURITY",
                                "ROUTING",
                                "CONNECTIVITY",
                                "RETRY_EXHAUSTED",
                                "TIMEOUT"
                              ],
                              "type": "[Ljava.lang.String;"
                            }
                          },
                          "type": "String"
                        },
                        "key": {"name": "source"}
                      },
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {"typeId": "errorTypeDefinition"},
                          "type": "String"
                        },
                        "key": {
                          "name": "target",
                          "required": "true"
                        }
                      }
                    ]
                  },
                  "format": "java",
                  "annotations": {
                    "typeDsl": {
                      "allowTopLevelDefinition": false,
                      "allowInlineDefinition": true
                    },
                    "infrastructureType": {},
                    "description": {"value": "Determines that an error thrown by this operation should be mapped to another"}
                  },
                  "type": "Array"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "errorMappings",
                "layoutModel": {
                  "password": false,
                  "tabName": "Error Mapping",
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": false,
          "blocking": true,
          "name": "unauthorize",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "SALESFORCE-PUB-SUB",
              "type": "PROCESSOR"
            },
            "namespace": "SALESFORCE-PUB-SUB",
            "type": "UNAUTHORIZE"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": []
        }
      ],
      "messageSources": [{
        "semanticTerms": [],
        "kind": "source",
        "description": "",
        "modelProperties": {
          "metadataKeyId": {
            "parameterName": "channelName",
            "type": {
              "format": "java",
              "type": "String"
            },
            "categoryName": "EventMetadataResolversCategory"
          },
          "typeResolversInformation": {
            "partialTypeKeyResolver": false,
            "outputResolver": {
              "resolverName": "SourceOutputMetadataResolver",
              "requiresConnection": true,
              "requiresConfiguration": true
            },
            "keysResolver": {
              "resolverName": "TopicMetadataResolver",
              "requiresConnection": true,
              "requiresConfiguration": true
            },
            "category": "EventMetadataResolversCategory"
          }
        },
        "parameterGroupModels": [
          {
            "name": "General",
            "layoutModel": {
              "password": false,
              "query": false,
              "text": false,
              "order": 1
            },
            "description": "",
            "modelProperties": {},
            "parameters": [
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "The name of the streaming channel to subscribe to",
                "modelProperties": {"org.mule.runtime.extension.api.property.MetadataKeyPartModelProperty": {
                  "providedByKeyResolver": true,
                  "order": 1
                }},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": true,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "channelName",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"summary": "Determines what events the subscriber will receive"},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Interface with the following implementations: LATEST (subscriber receives new events that are broadcast after the client subscribes), EARLIEST (subscriber receives all events, including past events that are within the retention window of the server and new events sent after subscription), CUSTOM (subscriber will only receive events with a replay id higher than the specified value). REPLAY ID FROM OBJECT STORE (subscriber will only receive events with a replay id higher than the one specified inside object store).",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "@ref:com.mulesoft.connector.salesforce.pubsub.api.param.ReplayOption"
                },
                "required": true,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": true
                },
                "name": "replayOption",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "allowedStereotypeModels": [{
                  "namespace": "SALESFORCE-PUB-SUB",
                  "type": "REPLAY_OPTION"
                }],
                "isComponentId": false
              },
              {
                "displayModel": {
                  "summary": "The size of a batch for the events received by the source",
                  "displayName": "Batch events size"
                },
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "100",
                "description": "The total number of events included in a server batch. Lower values mean small memory footprint but more server calls while bigger values mean bigger memory footprint with less API calls. A new batch of events will be requested by the connector after the flow manages to consume the existing ones.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {
                    "classInformation": {
                      "implementedInterfaces": [],
                      "parent": "",
                      "classname": "int",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    },
                    "int": {}
                  },
                  "type": "Number"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "eventBatchSize",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "The name of the configuration to be used to execute this component",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {
                    "classInformation": {
                      "implementedInterfaces": [],
                      "parent": "",
                      "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    },
                    "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                  },
                  "type": "Object",
                  "fields": []
                },
                "required": true,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": true
                },
                "name": "config-ref",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [{
                  "parent": {
                    "namespace": "MULE",
                    "type": "MODULE_CONFIG"
                  },
                  "namespace": "SALESFORCE-PUB-SUB",
                  "type": "PUBSUB-CONFIG"
                }],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": true,
                "description": "Whether this source should only be executed on the primary node when runnning in Cluster",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "Boolean"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "primaryNodeOnly",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 8
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Configure if repeatable streams should be used and their behaviour",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 2},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-byte-streaming-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "repeatable-in-memory-stream"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "This is the amount of memory that will be allocated in order to consume the stream and provide random access to it. If the stream contains more data than can be fit into this buffer, then it will be expanded by according to the bufferSizeIncrement attribute, with an upper limit of maxInMemorySize."}},
                          "model": {
                            "annotations": {
                              "default": "512",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "initialBufferSize"}
                        },
                        {
                          "annotations": {"description": {"value": "This is by how much will be buffer size by expanded if it exceeds its initial size. Setting a value of zero or lower will mean that the buffer should not expand, meaning that a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised when the buffer gets full."}},
                          "model": {
                            "annotations": {
                              "default": "512",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "bufferSizeIncrement"}
                        },
                        {
                          "annotations": {"description": {"value": "This is the maximum amount of memory that will be used. If more than that is used then a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised. A value lower or equal to zero means no limit."}},
                          "model": {
                            "annotations": {
                              "default": "1024",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "maxBufferSize"}
                        },
                        {
                          "annotations": {"description": {"value": "The unit in which all these attributes are expressed"}},
                          "model": {
                            "annotations": {
                              "default": "KB",
                              "enum": {
                                "values": [
                                  "BYTE",
                                  "KB",
                                  "MB",
                                  "GB"
                                ],
                                "type": "[Ljava.lang.String;"
                              }
                            },
                            "type": "String"
                          },
                          "key": {"name": "bufferUnit"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "QName": {"value": {
                          "localPart": "repeatable-file-store-stream",
                          "prefix": "ee",
                          "namespaceURI": "http://www.mulesoft.org/schema/mule/ee/core"
                        }},
                        "infrastructureType": {},
                        "typeId": "repeatable-file-store-stream"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "Defines the maximum memory that the stream should use to keep data in memory. If more than that is consumed then it will start to buffer the content on disk."}},
                          "model": {
                            "annotations": {
                              "default": "512",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "inMemorySize"}
                        },
                        {
                          "annotations": {"description": {"value": "The unit in which maxInMemorySize is expressed"}},
                          "model": {
                            "annotations": {
                              "default": "KB",
                              "enum": {
                                "values": [
                                  "BYTE",
                                  "KB",
                                  "MB",
                                  "GB"
                                ],
                                "type": "[Ljava.lang.String;"
                              }
                            },
                            "type": "String"
                          },
                          "key": {"name": "bufferUnit"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "description": {"value": "This configuration allows the input stream to be read only once. It will not allow to seek randomly which will limit the transformations that DW can perform on this stream. Use this option for use cases which just require moving data around from one system to another to get optimum performance."},
                        "typeId": "non-repeatable-stream"
                      },
                      "type": "Object",
                      "fields": []
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ByteStreamingStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "streamingStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Defines a policy for processing the redelivery of the same message",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 1},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-redelivery-policy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "RedeliveryPolicy"
                  },
                  "type": "Object",
                  "fields": [
                    {
                      "annotations": {"description": {"value": "The maximum number of times a message can be redelivered and processed unsuccessfully before triggering process-failed-message"}},
                      "model": {
                        "annotations": {
                          "default": "5",
                          "int": {}
                        },
                        "type": "Number"
                      },
                      "key": {"name": "maxRedeliveryCount"}
                    },
                    {
                      "annotations": {"description": {"value": "The secure hashing algorithm to use. If not set, the default is SHA-256."}},
                      "model": {"type": "String"},
                      "key": {"name": "messageDigestAlgorithm"}
                    },
                    {
                      "annotations": {
                        "flattened": {},
                        "description": {"value": "Defines which strategy is used to identify the messages."}
                      },
                      "model": {
                        "annotations": {
                          "exclusiveOptionals": {
                            "isOneRequired": true,
                            "exclusiveParameterNames": [
                              "useSecureHash",
                              "idExpression"
                            ]
                          },
                          "typeId": "RedeliveryPolicyMessageIdentifier"
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "Whether to use a secure hash algorithm to identify a redelivered message"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "useSecureHash"}
                          },
                          {
                            "annotations": {"description": {"value": "Defines one or more expressions to use to determine when a message has been redelivered. This property may only be set if useSecureHash is false."}},
                            "model": {"type": "String"},
                            "key": {"name": "idExpression"}
                          }
                        ]
                      },
                      "key": {"name": "MessageIdentifier"}
                    },
                    {
                      "annotations": {
                        "description": {"value": "The object store where the redelivery counter for each message is going to be stored."},
                        "stereotype": {"allowedStereotypes": [{
                          "namespace": "OS",
                          "type": "OBJECT_STORE"
                        }]}
                      },
                      "model": {"type": "@ref:org.mule.runtime.api.store.ObjectStore"},
                      "key": {"name": "objectStore"}
                    }
                  ]
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "redeliveryPolicy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Redelivery",
                  "query": false,
                  "text": false,
                  "order": 6
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }
            ],
            "exclusiveParametersModels": [],
            "showInDsl": false
          },
          {
            "name": "Connection",
            "layoutModel": {
              "password": false,
              "query": false,
              "text": false,
              "order": 2
            },
            "description": "",
            "modelProperties": {},
            "parameters": [{
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "A retry strategy in case of connectivity errors",
              "modelProperties": {
                "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                  "localPart": "abstract-reconnection-strategy",
                  "prefix": "mule",
                  "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                }}
              },
              "type": {
                "of": [
                  {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "reconnect"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                        "model": {
                          "annotations": {
                            "default": "2000",
                            "classInformation": {
                              "implementedInterfaces": ["java.lang.Comparable"],
                              "parent": "java.lang.Number",
                              "classname": "java.lang.Long",
                              "hasDefaultConstructor": false,
                              "isInstantiable": false,
                              "isFinal": true,
                              "genericTypes": [],
                              "isInterface": false,
                              "isAbstract": false,
                              "isMap": false
                            },
                            "int": {}
                          },
                          "type": "Number"
                        },
                        "key": {"name": "frequency"}
                      },
                      {
                        "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                        "model": {
                          "annotations": {"default": "true"},
                          "type": "Boolean"
                        },
                        "key": {"name": "blocking"}
                      },
                      {
                        "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                        "model": {
                          "annotations": {
                            "default": "2",
                            "int": {}
                          },
                          "type": "Number"
                        },
                        "key": {"name": "count"}
                      }
                    ]
                  },
                  {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "reconnect-forever"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                        "model": {
                          "annotations": {
                            "default": "2000",
                            "classInformation": {
                              "implementedInterfaces": ["java.lang.Comparable"],
                              "parent": "java.lang.Number",
                              "classname": "java.lang.Long",
                              "hasDefaultConstructor": false,
                              "isInstantiable": false,
                              "isFinal": true,
                              "genericTypes": [],
                              "isInterface": false,
                              "isAbstract": false,
                              "isMap": false
                            },
                            "int": {}
                          },
                          "type": "Number"
                        },
                        "key": {"name": "frequency"}
                      },
                      {
                        "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                        "model": {
                          "annotations": {"default": "true"},
                          "type": "Boolean"
                        },
                        "key": {"name": "blocking"}
                      }
                    ]
                  }
                ],
                "format": "java",
                "annotations": {
                  "infrastructureType": {},
                  "typeId": "ReconnectionStrategy"
                },
                "type": "Union"
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": true,
                "allowsReferences": false
              },
              "name": "reconnectionStrategy",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 7
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            }],
            "exclusiveParametersModels": [],
            "showInDsl": false
          }
        ],
        "hasResponse": false,
        "output": {
          "hasDynamicType": true,
          "description": "",
          "modelProperties": {},
          "type": {
            "format": {
              "validMimeTypes": ["*/*"],
              "id": "*/*",
              "label": "*/*"
            },
            "annotations": {
              "classInformation": {
                "implementedInterfaces": [],
                "parent": "",
                "classname": "java.lang.Object",
                "hasDefaultConstructor": true,
                "isInstantiable": true,
                "isFinal": false,
                "genericTypes": [],
                "isInterface": false,
                "isAbstract": false,
                "isMap": false
              },
              "typeId": "java.lang.Object",
              "typeAlias": {"value": "Object"}
            },
            "type": "Any"
          }
        },
        "outputAttributes": {
          "hasDynamicType": false,
          "description": "",
          "modelProperties": {},
          "type": {
            "format": "java",
            "annotations": {
              "classInformation": {
                "implementedInterfaces": [],
                "parent": "",
                "classname": "java.io.Serializable",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              },
              "typeId": "java.io.Serializable",
              "typeAlias": {"value": "Serializable"}
            },
            "type": "Any"
          }
        },
        "supportsStreaming": true,
        "requiresConnection": true,
        "runsOnPrimaryNodeOnly": false,
        "name": "subscribe-channel-listener",
        "terminateCallbackModel": {
          "name": "onTerminate",
          "description": "",
          "modelProperties": {},
          "parameterGroupModels": []
        },
        "stereotype": {
          "parent": {
            "parent": {
              "namespace": "MULE",
              "type": "SOURCE"
            },
            "namespace": "SALESFORCE-PUB-SUB",
            "type": "SOURCE"
          },
          "namespace": "SALESFORCE-PUB-SUB",
          "type": "SUBSCRIBE-CHANNEL-LISTENER"
        },
        "nestedComponents": [],
        "transactional": false,
        "notifications": [],
        "errors": []
      }],
      "name": "pubsub-config",
      "description": "This class represents an extension configuration, values set in this class are commonly used across multiple operations since they represent something core from the extension.",
      "modelProperties": {"requiredForMetadata": {"requiredParameters": ["name"]}},
      "stereotype": {
        "parent": {
          "namespace": "MULE",
          "type": "MODULE_CONFIG"
        },
        "namespace": "SALESFORCE-PUB-SUB",
        "type": "PUBSUB-CONFIG"
      },
      "parameterGroupModels": [{
        "name": "General",
        "layoutModel": {
          "password": false,
          "query": false,
          "text": false,
          "order": 1
        },
        "description": "",
        "modelProperties": {},
        "parameters": [
          {
            "semanticTerms": [],
            "role": "BEHAVIOUR",
            "description": "The identifier of this element used to reference it in other components",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "String"
            },
            "required": true,
            "expressionSupport": "NOT_SUPPORTED",
            "fieldValueProviderModels": [],
            "hasDynamicType": false,
            "isConfigOverride": false,
            "dslConfiguration": {
              "allowTopLevelDefinition": false,
              "allowsInlineDefinition": false,
              "allowsReferences": false
            },
            "name": "name",
            "layoutModel": {
              "password": false,
              "query": false,
              "text": false,
              "order": 2
            },
            "allowedStereotypeModels": [],
            "isComponentId": true
          },
          {
            "semanticTerms": [],
            "role": "BEHAVIOUR",
            "description": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit.",
            "modelProperties": {
              "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 4},
              "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                "localPart": "expiration-policy",
                "prefix": "mule",
                "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
              }}
            },
            "type": {
              "format": "java",
              "annotations": {
                "typeDsl": {
                  "allowTopLevelDefinition": false,
                  "allowInlineDefinition": true
                },
                "infrastructureType": {},
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "org.mule.runtime.extension.api.runtime.ExpirationPolicy",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": true,
                  "isAbstract": true,
                  "isMap": false
                },
                "description": {"value": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit."},
                "typeId": "org.mule.runtime.extension.api.runtime.ExpirationPolicy"
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {
                    "description": {"value": "A scalar time value for the maximum amount of time a dynamic configuration instance should be allowed to be idle before it's considered eligible for expiration"},
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "annotations": {
                      "default": "5",
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "key": {"name": "maxIdleTime"}
                },
                {
                  "annotations": {
                    "description": {"value": "A time unit that qualifies the maxIdleTime attribute"},
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "annotations": {
                      "default": "MINUTES",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "key": {"name": "timeUnit"}
                }
              ]
            },
            "required": false,
            "expressionSupport": "NOT_SUPPORTED",
            "fieldValueProviderModels": [],
            "hasDynamicType": false,
            "isConfigOverride": false,
            "dslConfiguration": {
              "allowTopLevelDefinition": false,
              "allowsInlineDefinition": true,
              "allowsReferences": false
            },
            "name": "expirationPolicy",
            "layoutModel": {
              "password": false,
              "tabName": "Advanced",
              "query": false,
              "text": false,
              "order": 1
            },
            "allowedStereotypeModels": [],
            "isComponentId": false
          }
        ],
        "exclusiveParametersModels": [],
        "showInDsl": false
      }],
      "connectionProviders": [
        {
          "displayModel": {"displayName": "Basic Authentication"},
          "externalLibraryModels": [],
          "semanticTerms": ["connectivity.BasicAuthenticationConnection"],
          "connectionManagementType": "CACHED",
          "supportsConnectivityTesting": true,
          "name": "basic",
          "description": "",
          "modelProperties": {"requiredForMetadata": {"requiredParameters": [
            "host",
            "port",
            "connectionTimeout",
            "connectionTimeoutUnit",
            "loginRequestTimeout",
            "loginRequestTimeoutUnit",
            "proxyConfiguration",
            "username",
            "password",
            "securityToken",
            "url"
          ]}},
          "stereotype": {
            "parent": {
              "namespace": "MULE",
              "type": "CONNECTION"
            },
            "namespace": "SALESFORCE-PUB-SUB",
            "type": "BASIC"
          },
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 0
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "Specifies the amount of time that the consumer will attempt to establish a connection before it times out",
                    "displayName": "Connection Timeout",
                    "example": "0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "Specifies the amount of time that the consumer will attempt to establish a connection before it times out. Works in tandem with Time unit. Values less than one millisecond will be converted to 0",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit to be used for the Connection Timeout parameter",
                    "displayName": "Time unit"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "java.util.concurrent.TimeUnit",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionTimeoutUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Specifies the amount of time the client will wait until the answer for the login is received before it times out",
                    "displayName": "Login Request Timeout",
                    "example": "0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "Specifies the amount of time the client will wait until the answer for the login request is received before it times out. Works in tandem with Login Request Time unit. Values less than one millisecond will be converted to 0",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "loginRequestTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit to be used for the Login Request Timeout parameter",
                    "displayName": "Login Request Time unit"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "java.util.concurrent.TimeUnit",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "loginRequestTimeoutUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Configuration for executing requests through a proxy.",
                    "displayName": "Proxy configuration"
                  },
                  "semanticTerms": ["connectivity.proxyConfiguration"],
                  "role": "BEHAVIOUR",
                  "description": "Proxy configuration for the connector.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "@ref:com.mulesoft.connector.salesforce.pubsub.api.param.ProxyConfiguration"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "proxyConfiguration",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["connectivity.username"],
                  "role": "BEHAVIOUR",
                  "description": "Username used to initialize the session.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "username",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "Password used to authenticate the user.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "password",
                  "layoutModel": {
                    "password": true,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "User's security token"},
                  "semanticTerms": ["connectivity.securityToken"],
                  "role": "BEHAVIOUR",
                  "description": "User's security token. It can be omitted if your IP has been added to the allow list on Salesforce.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "securityToken",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Web service URL responsible for user authentication. Defaults to the latest api version supported by the connector",
                    "displayName": "Authorization URL",
                    "example": "https://login.salesforce.com/services/Soap/u/54.0"
                  },
                  "semanticTerms": ["core.urlTemplate"],
                  "role": "BEHAVIOUR",
                  "description": "Web service URL responsible for user authentication. This is the URL for the endpoint that is configured to handle SOAP authentication requests.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "url",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "If the HTTPS was configured as protocol, then the user needs to configure at least the keystore configuration",
                    "displayName": "TLS configuration"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 8},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "context",
                      "prefix": "tls",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeDsl": {
                        "allowTopLevelDefinition": true,
                        "allowInlineDefinition": true
                      },
                      "infrastructureType": {},
                      "QName": {"value": {
                        "localPart": "context",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }},
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.api.tls.TlsContextFactory",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.api.tls.TlsContextFactory",
                      "stereotype": {"allowedStereotypes": [{
                        "namespace": "TLS",
                        "type": "CONTEXT"
                      }]},
                      "typeAlias": {"value": "Tls"}
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "A comma separated list of protocols enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledProtocols"}
                      },
                      {
                        "annotations": {"description": {"value": "A comma separated list of cipher suites enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledCipherSuites"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 0
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "infrastructureType": {},
                            "QName": {"value": {
                              "localPart": "trust-store",
                              "prefix": "tls",
                              "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                            }},
                            "description": {"value": "Trust store configuration. If used client side, the trust store contains the certificates of the trusted servers. If used server side, it contains the certificates of the trusted clients."},
                            "typeId": "TrustStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the trust store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            },
                            {
                              "annotations": {"description": {"value": "If true, no certificate validations will be performed, rendering connections vulnerable to attacks. Use at your own risk."}},
                              "model": {
                                "annotations": {"default": "false"},
                                "type": "Boolean"
                              },
                              "key": {"name": "insecure"}
                            }
                          ]
                        },
                        "key": {"name": "trust-store"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 1
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "infrastructureType": {},
                            "QName": {"value": {
                              "localPart": "key-store",
                              "prefix": "tls",
                              "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                            }},
                            "description": {"value": "Key store configuration. The key store contains the keys of this server/client."},
                            "typeId": "KeyStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "When the key store contains many private keys, this attribute indicates the alias of the key that should be used. If not defined, the first key in the file will be used by default."}},
                              "model": {"type": "String"},
                              "key": {"name": "alias"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the private key."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "keyPassword"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the key store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            }
                          ]
                        },
                        "key": {"name": "key-store"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 2
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "of": [
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "standard-revocation-check",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Uses the standard JVM certificate revocation checks, which depend on the certificate having the corresponding extension points (additional tags for CRLDP or OCSP), and the availability of revocation servers."},
                                "typeId": "standard-revocation-check"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "Only verify the last element of the certificate chain."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "onlyEndEntities"}
                                },
                                {
                                  "annotations": {"description": {"value": "Try CRL instead of OCSP first."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "preferCrls"}
                                },
                                {
                                  "annotations": {"description": {"value": "Do not use the secondary checking method (the one not selected before)."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "noFallback"}
                                },
                                {
                                  "annotations": {"description": {"value": "Avoid verification failure when the revocation server can not be reached or is busy."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "softFail"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "custom-ocsp-responder",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Uses a custom OCSP responder for certificate revocation checks, with a specific trusted certificate for revocating other keys. This ignores extension points (additional tags for CRLDP or OCSP) present in the certificate, if any."},
                                "typeId": "custom-ocsp-responder"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "The URL of the OCSP responder."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "url"}
                                },
                                {
                                  "annotations": {"description": {"value": "Alias of the signing certificate for the OCSP response (must be in the trust store), if present."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "certAlias"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "crl-file",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Local file based certificate revocation checker, which requires a CRL file to be accessible and ignores extension points (additional tags for CRLDP and OCSP) in the certificate."},
                                "typeId": "crl-file"
                              },
                              "type": "Object",
                              "fields": [{
                                "annotations": {"description": {"value": "The path to the CRL file."}},
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              }]
                            }
                          ],
                          "annotations": {
                            "infrastructureType": {},
                            "extensibleType": {},
                            "typeId": "RevocationCheck"
                          },
                          "type": "Union"
                        },
                        "key": {"name": "revocation-check"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": true,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "tlsContext",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Security",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [{
                    "namespace": "TLS",
                    "type": "CONTEXT"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "gRPC settings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "gRPC host"},
                  "semanticTerms": ["connectivity.host"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "api.pilot.pubsub.salesforce.com",
                  "description": "Host where the proxy requests will be sent.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "host",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "gRPC port"},
                  "semanticTerms": ["connectivity.port"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "7443",
                  "description": "Port where the proxy requests will be sent.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "port",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "reconnection",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "Reconnection"
                  },
                  "type": "Object",
                  "fields": [
                    {
                      "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                      "model": {
                        "annotations": {"default": "false"},
                        "type": "Boolean"
                      },
                      "key": {"name": "failsDeployment"}
                    },
                    {
                      "annotations": {"description": {"value": "The reconnection strategy to use"}},
                      "model": {
                        "of": [
                          {
                            "annotations": {
                              "infrastructureType": {},
                              "typeId": "reconnect"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              },
                              {
                                "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                "model": {
                                  "annotations": {
                                    "default": "2",
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "count"}
                              }
                            ]
                          },
                          {
                            "annotations": {
                              "infrastructureType": {},
                              "typeId": "reconnect-forever"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              }
                            ]
                          }
                        ],
                        "annotations": {
                          "infrastructureType": {},
                          "typeId": "ReconnectionStrategy"
                        },
                        "type": "Union"
                      },
                      "key": {"name": "reconnectionStrategy"}
                    }
                  ]
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnection",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ]
        },
        {
          "displayModel": {"displayName": "OAuth v2.0"},
          "externalLibraryModels": [],
          "semanticTerms": ["connectivity.OAuthAuthorizationCodeConnection"],
          "connectionManagementType": "CACHED",
          "supportsConnectivityTesting": true,
          "name": "config-with-oauth",
          "description": "",
          "modelProperties": {
            "requiredForMetadata": {"requiredParameters": [
              "host",
              "port",
              "connectionTimeout",
              "connectionTimeoutUnit",
              "loginRequestTimeout",
              "loginRequestTimeoutUnit",
              "proxyConfiguration",
              "apiVersion",
              "consumerKey",
              "consumerSecret",
              "authorizationUrl",
              "accessTokenUrl",
              "scopes",
              "resourceOwnerId",
              "before",
              "after",
              "listenerConfig",
              "callbackPath",
              "authorizePath",
              "externalCallbackUrl",
              "objectStore"
            ]},
            "OAuth": {"grantTypes": [{
              "credentialsPlacement": "BODY",
              "authorizationUrl": "https://login.salesforce.com/services/oauth2/authorize",
              "accessTokenExpr": "#[payload.access_token]",
              "expirationRegex": "#[payload.expires_in]",
              "accessTokenUrl": "https://login.salesforce.com/services/oauth2/token",
              "grantType": "Authorization Code",
              "refreshTokenExpr": "#[payload.refresh_token]",
              "includeRedirectUriInRefreshTokenRequest": true
            }]}
          },
          "stereotype": {
            "parent": {
              "namespace": "MULE",
              "type": "CONNECTION"
            },
            "namespace": "SALESFORCE-PUB-SUB",
            "type": "CONFIG-WITH-OAUTH"
          },
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 0
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "Specifies the amount of time that the consumer will attempt to establish a connection before it times out",
                    "displayName": "Connection Timeout",
                    "example": "0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "Specifies the amount of time that the consumer will attempt to establish a connection before it times out. Works in tandem with Time unit. Values less than one millisecond will be converted to 0",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit to be used for the Connection Timeout parameter",
                    "displayName": "Time unit"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "java.util.concurrent.TimeUnit",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionTimeoutUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Specifies the amount of time the client will wait until the answer for the login is received before it times out",
                    "displayName": "Login Request Timeout",
                    "example": "0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "Specifies the amount of time the client will wait until the answer for the login request is received before it times out. Works in tandem with Login Request Time unit. Values less than one millisecond will be converted to 0",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "loginRequestTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit to be used for the Login Request Timeout parameter",
                    "displayName": "Login Request Time unit"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "java.util.concurrent.TimeUnit",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "loginRequestTimeoutUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Configuration for executing requests through a proxy.",
                    "displayName": "Proxy configuration"
                  },
                  "semanticTerms": ["connectivity.proxyConfiguration"],
                  "role": "BEHAVIOUR",
                  "description": "Proxy configuration for the connector.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "@ref:com.mulesoft.connector.salesforce.pubsub.api.param.ProxyConfiguration"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "proxyConfiguration",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The API version used.",
                    "example": "54.0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The API version used. Defaults to the latest api version supported by the connector",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.lang.Comparable"],
                      "parent": "java.lang.Number",
                      "classname": "java.lang.Double",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": false,
                      "isMap": false
                    }},
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "apiVersion",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "If the HTTPS was configured as protocol, then the user needs to configure at least the keystore configuration",
                    "displayName": "TLS configuration"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 8},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "context",
                      "prefix": "tls",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeDsl": {
                        "allowTopLevelDefinition": true,
                        "allowInlineDefinition": true
                      },
                      "infrastructureType": {},
                      "QName": {"value": {
                        "localPart": "context",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }},
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.api.tls.TlsContextFactory",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.api.tls.TlsContextFactory",
                      "stereotype": {"allowedStereotypes": [{
                        "namespace": "TLS",
                        "type": "CONTEXT"
                      }]},
                      "typeAlias": {"value": "Tls"}
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "A comma separated list of protocols enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledProtocols"}
                      },
                      {
                        "annotations": {"description": {"value": "A comma separated list of cipher suites enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledCipherSuites"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 0
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "infrastructureType": {},
                            "QName": {"value": {
                              "localPart": "trust-store",
                              "prefix": "tls",
                              "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                            }},
                            "description": {"value": "Trust store configuration. If used client side, the trust store contains the certificates of the trusted servers. If used server side, it contains the certificates of the trusted clients."},
                            "typeId": "TrustStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the trust store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            },
                            {
                              "annotations": {"description": {"value": "If true, no certificate validations will be performed, rendering connections vulnerable to attacks. Use at your own risk."}},
                              "model": {
                                "annotations": {"default": "false"},
                                "type": "Boolean"
                              },
                              "key": {"name": "insecure"}
                            }
                          ]
                        },
                        "key": {"name": "trust-store"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 1
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "infrastructureType": {},
                            "QName": {"value": {
                              "localPart": "key-store",
                              "prefix": "tls",
                              "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                            }},
                            "description": {"value": "Key store configuration. The key store contains the keys of this server/client."},
                            "typeId": "KeyStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "When the key store contains many private keys, this attribute indicates the alias of the key that should be used. If not defined, the first key in the file will be used by default."}},
                              "model": {"type": "String"},
                              "key": {"name": "alias"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the private key."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "keyPassword"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the key store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            }
                          ]
                        },
                        "key": {"name": "key-store"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 2
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "of": [
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "standard-revocation-check",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Uses the standard JVM certificate revocation checks, which depend on the certificate having the corresponding extension points (additional tags for CRLDP or OCSP), and the availability of revocation servers."},
                                "typeId": "standard-revocation-check"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "Only verify the last element of the certificate chain."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "onlyEndEntities"}
                                },
                                {
                                  "annotations": {"description": {"value": "Try CRL instead of OCSP first."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "preferCrls"}
                                },
                                {
                                  "annotations": {"description": {"value": "Do not use the secondary checking method (the one not selected before)."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "noFallback"}
                                },
                                {
                                  "annotations": {"description": {"value": "Avoid verification failure when the revocation server can not be reached or is busy."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "softFail"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "custom-ocsp-responder",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Uses a custom OCSP responder for certificate revocation checks, with a specific trusted certificate for revocating other keys. This ignores extension points (additional tags for CRLDP or OCSP) present in the certificate, if any."},
                                "typeId": "custom-ocsp-responder"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "The URL of the OCSP responder."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "url"}
                                },
                                {
                                  "annotations": {"description": {"value": "Alias of the signing certificate for the OCSP response (must be in the trust store), if present."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "certAlias"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "crl-file",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Local file based certificate revocation checker, which requires a CRL file to be accessible and ignores extension points (additional tags for CRLDP and OCSP) in the certificate."},
                                "typeId": "crl-file"
                              },
                              "type": "Object",
                              "fields": [{
                                "annotations": {"description": {"value": "The path to the CRL file."}},
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              }]
                            }
                          ],
                          "annotations": {
                            "infrastructureType": {},
                            "extensibleType": {},
                            "typeId": "RevocationCheck"
                          },
                          "type": "Union"
                        },
                        "key": {"name": "revocation-check"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": true,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "tlsContext",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Security",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [{
                    "namespace": "TLS",
                    "type": "CONTEXT"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "gRPC settings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "gRPC host"},
                  "semanticTerms": ["connectivity.host"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "api.pilot.pubsub.salesforce.com",
                  "description": "Host where the proxy requests will be sent.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "host",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "gRPC port"},
                  "semanticTerms": ["connectivity.port"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "7443",
                  "description": "Port where the proxy requests will be sent.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "port",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "reconnection",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "Reconnection"
                  },
                  "type": "Object",
                  "fields": [
                    {
                      "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                      "model": {
                        "annotations": {"default": "false"},
                        "type": "Boolean"
                      },
                      "key": {"name": "failsDeployment"}
                    },
                    {
                      "annotations": {"description": {"value": "The reconnection strategy to use"}},
                      "model": {
                        "of": [
                          {
                            "annotations": {
                              "infrastructureType": {},
                              "typeId": "reconnect"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              },
                              {
                                "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                "model": {
                                  "annotations": {
                                    "default": "2",
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "count"}
                              }
                            ]
                          },
                          {
                            "annotations": {
                              "infrastructureType": {},
                              "typeId": "reconnect-forever"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              }
                            ]
                          }
                        ],
                        "annotations": {
                          "infrastructureType": {},
                          "typeId": "ReconnectionStrategy"
                        },
                        "type": "Union"
                      },
                      "key": {"name": "reconnectionStrategy"}
                    }
                  ]
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnection",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 6
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "displayModel": {"displayName": "OAuth Authorization Code"},
              "name": "oauthAuthorizationCode",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 4
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "semanticTerms": ["connectivity.clientId"],
                  "role": "BEHAVIOUR",
                  "description": "The OAuth consumerKey as registered with the service provider",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "consumerKey",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["connectivity.clientSecret"],
                  "role": "BEHAVIOUR",
                  "description": "The OAuth consumerSecret as registered with the service provider",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "consumerSecret",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["authorizationUrl"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "https://login.salesforce.com/services/oauth2/authorize",
                  "description": "The service provider's authorization endpoint URL",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "authorizationUrl",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 11
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["core.tokenUrlTemplate"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "https://login.salesforce.com/services/oauth2/token",
                  "description": "The service provider's accessToken endpoint URL",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "accessTokenUrl",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 12
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The OAuth scopes to be requested during the dance. If not provided, it will default to those in the annotation",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "scopes",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 13
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["connectivity.clientId"],
                  "role": "BEHAVIOUR",
                  "description": "The resourceOwnerId which each component should use if it doesn't reference otherwise.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "resourceOwnerId",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 14
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of a flow to be executed right before starting the OAuth dance",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "before",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 15
                  },
                  "allowedStereotypeModels": [{
                    "namespace": "MULE",
                    "type": "FLOW"
                  }],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of a flow to be executed right after an accessToken has been received",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "after",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 16
                  },
                  "allowedStereotypeModels": [{
                    "namespace": "MULE",
                    "type": "FLOW"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": true
            },
            {
              "displayModel": {"displayName": "OAuth Callback Config"},
              "name": "oauthCallbackConfig",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 5
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "A reference to a <http:listener-config /> to be used in order to create the listener that will catch the access token callback endpoint.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "listenerConfig",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 17
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "HTTP",
                    "type": "LISTENER_CONFIG"
                  }],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["apiContract.path"],
                  "role": "BEHAVIOUR",
                  "description": "The path of the access token callback endpoint",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "callbackPath",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 18
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["apiContract.path"],
                  "role": "BEHAVIOUR",
                  "description": "The path of the local http endpoint which triggers the OAuth dance",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "authorizePath",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 19
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["core.urlTemplate"],
                  "role": "BEHAVIOUR",
                  "description": "If the callback endpoint is behind a proxy or should be accessed through a non direct URL, use this parameter to tell the OAuth provider the URL it should use to access the callback",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "externalCallbackUrl",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 20
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": true
            },
            {
              "displayModel": {"displayName": "OAuth Store Config"},
              "name": "oauthStoreConfig",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 6
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A reference to the object store that should be used to store each resource owner id's data. If not specified, runtime will automatically provision the default one.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "objectStore",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 21
                },
                "allowedStereotypeModels": [{
                  "namespace": "OS",
                  "type": "OBJECT_STORE"
                }],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": true
            }
          ]
        },
        {
          "displayModel": {"displayName": "OAuth JWT"},
          "externalLibraryModels": [],
          "semanticTerms": [],
          "connectionManagementType": "CACHED",
          "supportsConnectivityTesting": true,
          "name": "jwt",
          "description": "",
          "modelProperties": {"requiredForMetadata": {"requiredParameters": [
            "host",
            "port",
            "connectionTimeout",
            "connectionTimeoutUnit",
            "loginRequestTimeout",
            "loginRequestTimeoutUnit",
            "proxyConfiguration",
            "apiVersion",
            "consumerKey",
            "keyStore",
            "storePassword",
            "certificateAlias",
            "principal",
            "tokenEndpoint",
            "audienceUrl"
          ]}},
          "stereotype": {
            "parent": {
              "namespace": "MULE",
              "type": "CONNECTION"
            },
            "namespace": "SALESFORCE-PUB-SUB",
            "type": "JWT"
          },
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 0
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "Specifies the amount of time that the consumer will attempt to establish a connection before it times out",
                    "displayName": "Connection Timeout",
                    "example": "0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "Specifies the amount of time that the consumer will attempt to establish a connection before it times out. Works in tandem with Time unit. Values less than one millisecond will be converted to 0",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit to be used for the Connection Timeout parameter",
                    "displayName": "Time unit"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "java.util.concurrent.TimeUnit",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionTimeoutUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Specifies the amount of time the client will wait until the answer for the login is received before it times out",
                    "displayName": "Login Request Timeout",
                    "example": "0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "Specifies the amount of time the client will wait until the answer for the login request is received before it times out. Works in tandem with Login Request Time unit. Values less than one millisecond will be converted to 0",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "loginRequestTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit to be used for the Login Request Timeout parameter",
                    "displayName": "Login Request Time unit"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "java.util.concurrent.TimeUnit",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "loginRequestTimeoutUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Configuration for executing requests through a proxy.",
                    "displayName": "Proxy configuration"
                  },
                  "semanticTerms": ["connectivity.proxyConfiguration"],
                  "role": "BEHAVIOUR",
                  "description": "Proxy configuration for the connector.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "@ref:com.mulesoft.connector.salesforce.pubsub.api.param.ProxyConfiguration"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "proxyConfiguration",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The API version used.",
                    "example": "54.0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The API version used. Defaults to the latest api version supported by the connector",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.lang.Comparable"],
                      "parent": "java.lang.Number",
                      "classname": "java.lang.Double",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": false,
                      "isMap": false
                    }},
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "apiVersion",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["connectivity.clientId"],
                  "role": "BEHAVIOUR",
                  "description": "Consumer key for Salesforce connected app",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "consumerKey",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "pathModel": {
                      "fileExtensions": [],
                      "acceptsUrls": false,
                      "location": "ANY",
                      "type": "FILE"
                    },
                    "example": "keyStoreFile.jks"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "Path to key store used to sign data during authentication",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "keyStore",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "Password of key store",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "storePassword",
                  "layoutModel": {
                    "password": true,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "Alias of the certificate",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "certificateAlias",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["connectivity.username"],
                  "role": "BEHAVIOUR",
                  "description": "Username of desired Salesforce user to take action on behalf of",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "principal",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "URL pointing to the server responsible for providing the authentication token",
                    "example": "https://host:port/other1/other2"
                  },
                  "semanticTerms": ["core.urlTemplate"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "https://login.salesforce.com/services/oauth2/token",
                  "description": "URL pointing to the server responsible for providing the authentication token. According to Salesforce it should be https://login.salesforce.com/services/oauth2/token, or, if implementing for a community, https://acme.force.com/customers/services/oauth2/token (where acme.force.com/customers is your community URL).",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "tokenEndpoint",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Identifies the authorization server as an intended audience",
                    "example": "https://login.salesforce.com"
                  },
                  "semanticTerms": ["core.urlTemplate"],
                  "role": "BEHAVIOUR",
                  "description": "The audience identifies the authorization server as an intended audience. The authorization server must verify that it is an intended audience for the token. Use the authorization server's URL for the audience value: https://login.salesforce.com, https://test.salesforce.com, or https://community.force.com/customers if implementing for a community.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "audienceUrl",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "If the HTTPS was configured as protocol, then the user needs to configure at least the keystore configuration",
                    "displayName": "TLS configuration"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 8},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "context",
                      "prefix": "tls",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeDsl": {
                        "allowTopLevelDefinition": true,
                        "allowInlineDefinition": true
                      },
                      "infrastructureType": {},
                      "QName": {"value": {
                        "localPart": "context",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }},
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.api.tls.TlsContextFactory",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.api.tls.TlsContextFactory",
                      "stereotype": {"allowedStereotypes": [{
                        "namespace": "TLS",
                        "type": "CONTEXT"
                      }]},
                      "typeAlias": {"value": "Tls"}
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "A comma separated list of protocols enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledProtocols"}
                      },
                      {
                        "annotations": {"description": {"value": "A comma separated list of cipher suites enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledCipherSuites"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 0
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "infrastructureType": {},
                            "QName": {"value": {
                              "localPart": "trust-store",
                              "prefix": "tls",
                              "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                            }},
                            "description": {"value": "Trust store configuration. If used client side, the trust store contains the certificates of the trusted servers. If used server side, it contains the certificates of the trusted clients."},
                            "typeId": "TrustStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the trust store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            },
                            {
                              "annotations": {"description": {"value": "If true, no certificate validations will be performed, rendering connections vulnerable to attacks. Use at your own risk."}},
                              "model": {
                                "annotations": {"default": "false"},
                                "type": "Boolean"
                              },
                              "key": {"name": "insecure"}
                            }
                          ]
                        },
                        "key": {"name": "trust-store"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 1
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "infrastructureType": {},
                            "QName": {"value": {
                              "localPart": "key-store",
                              "prefix": "tls",
                              "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                            }},
                            "description": {"value": "Key store configuration. The key store contains the keys of this server/client."},
                            "typeId": "KeyStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "When the key store contains many private keys, this attribute indicates the alias of the key that should be used. If not defined, the first key in the file will be used by default."}},
                              "model": {"type": "String"},
                              "key": {"name": "alias"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the private key."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "keyPassword"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the key store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            }
                          ]
                        },
                        "key": {"name": "key-store"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 2
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "of": [
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "standard-revocation-check",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Uses the standard JVM certificate revocation checks, which depend on the certificate having the corresponding extension points (additional tags for CRLDP or OCSP), and the availability of revocation servers."},
                                "typeId": "standard-revocation-check"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "Only verify the last element of the certificate chain."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "onlyEndEntities"}
                                },
                                {
                                  "annotations": {"description": {"value": "Try CRL instead of OCSP first."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "preferCrls"}
                                },
                                {
                                  "annotations": {"description": {"value": "Do not use the secondary checking method (the one not selected before)."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "noFallback"}
                                },
                                {
                                  "annotations": {"description": {"value": "Avoid verification failure when the revocation server can not be reached or is busy."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "softFail"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "custom-ocsp-responder",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Uses a custom OCSP responder for certificate revocation checks, with a specific trusted certificate for revocating other keys. This ignores extension points (additional tags for CRLDP or OCSP) present in the certificate, if any."},
                                "typeId": "custom-ocsp-responder"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "The URL of the OCSP responder."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "url"}
                                },
                                {
                                  "annotations": {"description": {"value": "Alias of the signing certificate for the OCSP response (must be in the trust store), if present."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "certAlias"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "crl-file",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Local file based certificate revocation checker, which requires a CRL file to be accessible and ignores extension points (additional tags for CRLDP and OCSP) in the certificate."},
                                "typeId": "crl-file"
                              },
                              "type": "Object",
                              "fields": [{
                                "annotations": {"description": {"value": "The path to the CRL file."}},
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              }]
                            }
                          ],
                          "annotations": {
                            "infrastructureType": {},
                            "extensibleType": {},
                            "typeId": "RevocationCheck"
                          },
                          "type": "Union"
                        },
                        "key": {"name": "revocation-check"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": true,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "tlsContext",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Security",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [{
                    "namespace": "TLS",
                    "type": "CONTEXT"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "gRPC settings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "gRPC host"},
                  "semanticTerms": ["connectivity.host"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "api.pilot.pubsub.salesforce.com",
                  "description": "Host where the proxy requests will be sent.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "host",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "gRPC port"},
                  "semanticTerms": ["connectivity.port"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "7443",
                  "description": "Port where the proxy requests will be sent.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "port",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "reconnection",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "Reconnection"
                  },
                  "type": "Object",
                  "fields": [
                    {
                      "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                      "model": {
                        "annotations": {"default": "false"},
                        "type": "Boolean"
                      },
                      "key": {"name": "failsDeployment"}
                    },
                    {
                      "annotations": {"description": {"value": "The reconnection strategy to use"}},
                      "model": {
                        "of": [
                          {
                            "annotations": {
                              "infrastructureType": {},
                              "typeId": "reconnect"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              },
                              {
                                "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                "model": {
                                  "annotations": {
                                    "default": "2",
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "count"}
                              }
                            ]
                          },
                          {
                            "annotations": {
                              "infrastructureType": {},
                              "typeId": "reconnect-forever"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              }
                            ]
                          }
                        ],
                        "annotations": {
                          "infrastructureType": {},
                          "typeId": "ReconnectionStrategy"
                        },
                        "type": "Union"
                      },
                      "key": {"name": "reconnectionStrategy"}
                    }
                  ]
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnection",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 8
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ]
        },
        {
          "displayModel": {"displayName": "OAuth Username Password"},
          "externalLibraryModels": [],
          "semanticTerms": [],
          "connectionManagementType": "CACHED",
          "supportsConnectivityTesting": true,
          "name": "oauth-user-pass",
          "description": "",
          "modelProperties": {"requiredForMetadata": {"requiredParameters": [
            "host",
            "port",
            "connectionTimeout",
            "connectionTimeoutUnit",
            "loginRequestTimeout",
            "loginRequestTimeoutUnit",
            "proxyConfiguration",
            "apiVersion",
            "consumerKey",
            "consumerSecret",
            "username",
            "password",
            "securityToken",
            "tokenEndpoint"
          ]}},
          "stereotype": {
            "parent": {
              "namespace": "MULE",
              "type": "CONNECTION"
            },
            "namespace": "SALESFORCE-PUB-SUB",
            "type": "OAUTH-USER-PASS"
          },
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 0
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "Specifies the amount of time that the consumer will attempt to establish a connection before it times out",
                    "displayName": "Connection Timeout",
                    "example": "0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "Specifies the amount of time that the consumer will attempt to establish a connection before it times out. Works in tandem with Time unit. Values less than one millisecond will be converted to 0",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit to be used for the Connection Timeout parameter",
                    "displayName": "Time unit"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "java.util.concurrent.TimeUnit",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionTimeoutUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Specifies the amount of time the client will wait until the answer for the login is received before it times out",
                    "displayName": "Login Request Timeout",
                    "example": "0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "Specifies the amount of time the client will wait until the answer for the login request is received before it times out. Works in tandem with Login Request Time unit. Values less than one millisecond will be converted to 0",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "loginRequestTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit to be used for the Login Request Timeout parameter",
                    "displayName": "Login Request Time unit"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "java.util.concurrent.TimeUnit",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "loginRequestTimeoutUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Configuration for executing requests through a proxy.",
                    "displayName": "Proxy configuration"
                  },
                  "semanticTerms": ["connectivity.proxyConfiguration"],
                  "role": "BEHAVIOUR",
                  "description": "Proxy configuration for the connector.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "@ref:com.mulesoft.connector.salesforce.pubsub.api.param.ProxyConfiguration"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "proxyConfiguration",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The API version used.",
                    "example": "54.0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The API version used. Defaults to the latest api version supported by the connector",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.lang.Comparable"],
                      "parent": "java.lang.Number",
                      "classname": "java.lang.Double",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": false,
                      "isMap": false
                    }},
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "apiVersion",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["connectivity.clientId"],
                  "role": "BEHAVIOUR",
                  "description": "Consumer key for Salesforce connected app",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "consumerKey",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["connectivity.clientSecret"],
                  "role": "BEHAVIOUR",
                  "description": "Your application's client secret (consumer secret in Remote Access Detail).",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "consumerSecret",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["connectivity.username"],
                  "role": "BEHAVIOUR",
                  "description": "Username used to initialize the session",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "username",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "Password used to authenticate the user",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "password",
                  "layoutModel": {
                    "password": true,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "User's security token"},
                  "semanticTerms": ["connectivity.securityToken"],
                  "role": "BEHAVIOUR",
                  "description": "User's security token. It can be omitted if your IP has been added to the allow list on Salesforce",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "securityToken",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "URL pointing to the server responsible for providing the authentication token",
                    "example": "https://host:port/other1/other2"
                  },
                  "semanticTerms": ["core.urlTemplate"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "https://login.salesforce.com/services/oauth2/token",
                  "description": "URL pointing to the server responsible for providing the authentication token. According to Salesforce it should be https://login.salesforce.com/services/oauth2/token, or, if implementing for a community, https://acme.force.com/customers/services/oauth2/token (where acme.force.com/customers is your community URL).",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "tokenEndpoint",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "If the HTTPS was configured as protocol, then the user needs to configure at least the keystore configuration",
                    "displayName": "TLS configuration"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 8},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "context",
                      "prefix": "tls",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeDsl": {
                        "allowTopLevelDefinition": true,
                        "allowInlineDefinition": true
                      },
                      "infrastructureType": {},
                      "QName": {"value": {
                        "localPart": "context",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }},
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.api.tls.TlsContextFactory",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.api.tls.TlsContextFactory",
                      "stereotype": {"allowedStereotypes": [{
                        "namespace": "TLS",
                        "type": "CONTEXT"
                      }]},
                      "typeAlias": {"value": "Tls"}
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "A comma separated list of protocols enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledProtocols"}
                      },
                      {
                        "annotations": {"description": {"value": "A comma separated list of cipher suites enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledCipherSuites"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 0
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "infrastructureType": {},
                            "QName": {"value": {
                              "localPart": "trust-store",
                              "prefix": "tls",
                              "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                            }},
                            "description": {"value": "Trust store configuration. If used client side, the trust store contains the certificates of the trusted servers. If used server side, it contains the certificates of the trusted clients."},
                            "typeId": "TrustStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the trust store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            },
                            {
                              "annotations": {"description": {"value": "If true, no certificate validations will be performed, rendering connections vulnerable to attacks. Use at your own risk."}},
                              "model": {
                                "annotations": {"default": "false"},
                                "type": "Boolean"
                              },
                              "key": {"name": "insecure"}
                            }
                          ]
                        },
                        "key": {"name": "trust-store"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 1
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "infrastructureType": {},
                            "QName": {"value": {
                              "localPart": "key-store",
                              "prefix": "tls",
                              "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                            }},
                            "description": {"value": "Key store configuration. The key store contains the keys of this server/client."},
                            "typeId": "KeyStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "When the key store contains many private keys, this attribute indicates the alias of the key that should be used. If not defined, the first key in the file will be used by default."}},
                              "model": {"type": "String"},
                              "key": {"name": "alias"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the private key."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "keyPassword"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the key store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            }
                          ]
                        },
                        "key": {"name": "key-store"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 2
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "of": [
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "standard-revocation-check",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Uses the standard JVM certificate revocation checks, which depend on the certificate having the corresponding extension points (additional tags for CRLDP or OCSP), and the availability of revocation servers."},
                                "typeId": "standard-revocation-check"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "Only verify the last element of the certificate chain."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "onlyEndEntities"}
                                },
                                {
                                  "annotations": {"description": {"value": "Try CRL instead of OCSP first."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "preferCrls"}
                                },
                                {
                                  "annotations": {"description": {"value": "Do not use the secondary checking method (the one not selected before)."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "noFallback"}
                                },
                                {
                                  "annotations": {"description": {"value": "Avoid verification failure when the revocation server can not be reached or is busy."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "softFail"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "custom-ocsp-responder",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Uses a custom OCSP responder for certificate revocation checks, with a specific trusted certificate for revocating other keys. This ignores extension points (additional tags for CRLDP or OCSP) present in the certificate, if any."},
                                "typeId": "custom-ocsp-responder"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "The URL of the OCSP responder."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "url"}
                                },
                                {
                                  "annotations": {"description": {"value": "Alias of the signing certificate for the OCSP response (must be in the trust store), if present."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "certAlias"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "crl-file",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Local file based certificate revocation checker, which requires a CRL file to be accessible and ignores extension points (additional tags for CRLDP and OCSP) in the certificate."},
                                "typeId": "crl-file"
                              },
                              "type": "Object",
                              "fields": [{
                                "annotations": {"description": {"value": "The path to the CRL file."}},
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              }]
                            }
                          ],
                          "annotations": {
                            "infrastructureType": {},
                            "extensibleType": {},
                            "typeId": "RevocationCheck"
                          },
                          "type": "Union"
                        },
                        "key": {"name": "revocation-check"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": true,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "tlsContext",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Security",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [{
                    "namespace": "TLS",
                    "type": "CONTEXT"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "gRPC settings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "gRPC host"},
                  "semanticTerms": ["connectivity.host"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "api.pilot.pubsub.salesforce.com",
                  "description": "Host where the proxy requests will be sent.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "host",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "gRPC port"},
                  "semanticTerms": ["connectivity.port"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "7443",
                  "description": "Port where the proxy requests will be sent.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "port",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "reconnection",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "Reconnection"
                  },
                  "type": "Object",
                  "fields": [
                    {
                      "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                      "model": {
                        "annotations": {"default": "false"},
                        "type": "Boolean"
                      },
                      "key": {"name": "failsDeployment"}
                    },
                    {
                      "annotations": {"description": {"value": "The reconnection strategy to use"}},
                      "model": {
                        "of": [
                          {
                            "annotations": {
                              "infrastructureType": {},
                              "typeId": "reconnect"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              },
                              {
                                "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                "model": {
                                  "annotations": {
                                    "default": "2",
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "count"}
                              }
                            ]
                          },
                          {
                            "annotations": {
                              "infrastructureType": {},
                              "typeId": "reconnect-forever"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              }
                            ]
                          }
                        ],
                        "annotations": {
                          "infrastructureType": {},
                          "typeId": "ReconnectionStrategy"
                        },
                        "type": "Union"
                      },
                      "key": {"name": "reconnectionStrategy"}
                    }
                  ]
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnection",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ]
        },
        {
          "displayModel": {"displayName": "OAuth SAML"},
          "externalLibraryModels": [],
          "semanticTerms": [],
          "connectionManagementType": "CACHED",
          "supportsConnectivityTesting": true,
          "name": "saml",
          "description": "",
          "modelProperties": {"requiredForMetadata": {"requiredParameters": [
            "host",
            "port",
            "connectionTimeout",
            "connectionTimeoutUnit",
            "loginRequestTimeout",
            "loginRequestTimeoutUnit",
            "proxyConfiguration",
            "apiVersion",
            "consumerKey",
            "keyStore",
            "storePassword",
            "certificateAlias",
            "principal",
            "tokenEndpoint"
          ]}},
          "stereotype": {
            "parent": {
              "namespace": "MULE",
              "type": "CONNECTION"
            },
            "namespace": "SALESFORCE-PUB-SUB",
            "type": "SAML"
          },
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 0
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "Specifies the amount of time that the consumer will attempt to establish a connection before it times out",
                    "displayName": "Connection Timeout",
                    "example": "0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "Specifies the amount of time that the consumer will attempt to establish a connection before it times out. Works in tandem with Time unit. Values less than one millisecond will be converted to 0",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit to be used for the Connection Timeout parameter",
                    "displayName": "Time unit"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "java.util.concurrent.TimeUnit",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionTimeoutUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Specifies the amount of time the client will wait until the answer for the login is received before it times out",
                    "displayName": "Login Request Timeout",
                    "example": "0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "Specifies the amount of time the client will wait until the answer for the login request is received before it times out. Works in tandem with Login Request Time unit. Values less than one millisecond will be converted to 0",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "loginRequestTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit to be used for the Login Request Timeout parameter",
                    "displayName": "Login Request Time unit"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "java.util.concurrent.TimeUnit",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "loginRequestTimeoutUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Configuration for executing requests through a proxy.",
                    "displayName": "Proxy configuration"
                  },
                  "semanticTerms": ["connectivity.proxyConfiguration"],
                  "role": "BEHAVIOUR",
                  "description": "Proxy configuration for the connector.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "@ref:com.mulesoft.connector.salesforce.pubsub.api.param.ProxyConfiguration"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "proxyConfiguration",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The API version used.",
                    "example": "54.0"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The API version used. Defaults to the latest api version supported by the connector",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.lang.Comparable"],
                      "parent": "java.lang.Number",
                      "classname": "java.lang.Double",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": false,
                      "isMap": false
                    }},
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "apiVersion",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["connectivity.clientId"],
                  "role": "BEHAVIOUR",
                  "description": "Consumer key for Salesforce connected app",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "consumerKey",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "pathModel": {
                      "fileExtensions": [],
                      "acceptsUrls": false,
                      "location": "ANY",
                      "type": "FILE"
                    },
                    "example": "keyStoreFile.jks"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "Path to key store used to sign data during authentication",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "keyStore",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "Password of key store",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "storePassword",
                  "layoutModel": {
                    "password": true,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "Alias of the certificate",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "certificateAlias",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": ["connectivity.username"],
                  "role": "BEHAVIOUR",
                  "description": "Username of desired Salesforce user to take action on behalf of.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "principal",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "URL pointing to the server responsible for providing the authentication token",
                    "example": "https://host:port/other1/other2"
                  },
                  "semanticTerms": ["core.urlTemplate"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "https://login.salesforce.com/services/oauth2/token",
                  "description": "URL pointing to the server responsible for providing the authentication token. According to Salesforce it should be https://login.salesforce.com/services/oauth2/token, or, if implementing for a community, https://acme.force.com/customers/services/oauth2/token (where acme.force.com/customers is your community URL).",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "tokenEndpoint",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "If the HTTPS was configured as protocol, then the user needs to configure at least the keystore configuration",
                    "displayName": "TLS configuration"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 8},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "context",
                      "prefix": "tls",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeDsl": {
                        "allowTopLevelDefinition": true,
                        "allowInlineDefinition": true
                      },
                      "infrastructureType": {},
                      "QName": {"value": {
                        "localPart": "context",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }},
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.api.tls.TlsContextFactory",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.api.tls.TlsContextFactory",
                      "stereotype": {"allowedStereotypes": [{
                        "namespace": "TLS",
                        "type": "CONTEXT"
                      }]},
                      "typeAlias": {"value": "Tls"}
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "A comma separated list of protocols enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledProtocols"}
                      },
                      {
                        "annotations": {"description": {"value": "A comma separated list of cipher suites enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledCipherSuites"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 0
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "infrastructureType": {},
                            "QName": {"value": {
                              "localPart": "trust-store",
                              "prefix": "tls",
                              "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                            }},
                            "description": {"value": "Trust store configuration. If used client side, the trust store contains the certificates of the trusted servers. If used server side, it contains the certificates of the trusted clients."},
                            "typeId": "TrustStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the trust store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            },
                            {
                              "annotations": {"description": {"value": "If true, no certificate validations will be performed, rendering connections vulnerable to attacks. Use at your own risk."}},
                              "model": {
                                "annotations": {"default": "false"},
                                "type": "Boolean"
                              },
                              "key": {"name": "insecure"}
                            }
                          ]
                        },
                        "key": {"name": "trust-store"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 1
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "infrastructureType": {},
                            "QName": {"value": {
                              "localPart": "key-store",
                              "prefix": "tls",
                              "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                            }},
                            "description": {"value": "Key store configuration. The key store contains the keys of this server/client."},
                            "typeId": "KeyStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "When the key store contains many private keys, this attribute indicates the alias of the key that should be used. If not defined, the first key in the file will be used by default."}},
                              "model": {"type": "String"},
                              "key": {"name": "alias"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the private key."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "keyPassword"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the key store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            }
                          ]
                        },
                        "key": {"name": "key-store"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": false,
                            "query": false,
                            "text": false,
                            "order": 2
                          }},
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "of": [
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "standard-revocation-check",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Uses the standard JVM certificate revocation checks, which depend on the certificate having the corresponding extension points (additional tags for CRLDP or OCSP), and the availability of revocation servers."},
                                "typeId": "standard-revocation-check"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "Only verify the last element of the certificate chain."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "onlyEndEntities"}
                                },
                                {
                                  "annotations": {"description": {"value": "Try CRL instead of OCSP first."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "preferCrls"}
                                },
                                {
                                  "annotations": {"description": {"value": "Do not use the secondary checking method (the one not selected before)."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "noFallback"}
                                },
                                {
                                  "annotations": {"description": {"value": "Avoid verification failure when the revocation server can not be reached or is busy."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "softFail"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "custom-ocsp-responder",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Uses a custom OCSP responder for certificate revocation checks, with a specific trusted certificate for revocating other keys. This ignores extension points (additional tags for CRLDP or OCSP) present in the certificate, if any."},
                                "typeId": "custom-ocsp-responder"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "The URL of the OCSP responder."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "url"}
                                },
                                {
                                  "annotations": {"description": {"value": "Alias of the signing certificate for the OCSP response (must be in the trust store), if present."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "certAlias"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "infrastructureType": {},
                                "QName": {"value": {
                                  "localPart": "crl-file",
                                  "prefix": "tls",
                                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                                }},
                                "description": {"value": "Local file based certificate revocation checker, which requires a CRL file to be accessible and ignores extension points (additional tags for CRLDP and OCSP) in the certificate."},
                                "typeId": "crl-file"
                              },
                              "type": "Object",
                              "fields": [{
                                "annotations": {"description": {"value": "The path to the CRL file."}},
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              }]
                            }
                          ],
                          "annotations": {
                            "infrastructureType": {},
                            "extensibleType": {},
                            "typeId": "RevocationCheck"
                          },
                          "type": "Union"
                        },
                        "key": {"name": "revocation-check"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": true,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "tlsContext",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Security",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [{
                    "namespace": "TLS",
                    "type": "CONTEXT"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "gRPC settings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "gRPC host"},
                  "semanticTerms": ["connectivity.host"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "api.pilot.pubsub.salesforce.com",
                  "description": "Host where the proxy requests will be sent.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "host",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "gRPC port"},
                  "semanticTerms": ["connectivity.port"],
                  "role": "BEHAVIOUR",
                  "defaultValue": "7443",
                  "description": "Port where the proxy requests will be sent.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "port",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "reconnection",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "Reconnection"
                  },
                  "type": "Object",
                  "fields": [
                    {
                      "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                      "model": {
                        "annotations": {"default": "false"},
                        "type": "Boolean"
                      },
                      "key": {"name": "failsDeployment"}
                    },
                    {
                      "annotations": {"description": {"value": "The reconnection strategy to use"}},
                      "model": {
                        "of": [
                          {
                            "annotations": {
                              "infrastructureType": {},
                              "typeId": "reconnect"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              },
                              {
                                "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                "model": {
                                  "annotations": {
                                    "default": "2",
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "count"}
                              }
                            ]
                          },
                          {
                            "annotations": {
                              "infrastructureType": {},
                              "typeId": "reconnect-forever"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              }
                            ]
                          }
                        ],
                        "annotations": {
                          "infrastructureType": {},
                          "typeId": "ReconnectionStrategy"
                        },
                        "type": "Union"
                      },
                      "key": {"name": "reconnectionStrategy"}
                    }
                  ]
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnection",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ]
        }
      ]
    }],
    "externalLibraries": [],
    "description": "This is the main class of an extension, is the entry point from which configurations, connection providers, operations and sources are going to be declared.",
    "resources": [],
    "subTypes": [{
      "subTypes": [
        {
          "format": "java",
          "type": "@ref:com.mulesoft.connector.salesforce.pubsub.api.param.EarliestReplayOption"
        },
        {
          "format": "java",
          "type": "@ref:com.mulesoft.connector.salesforce.pubsub.api.param.LatestReplayOption"
        },
        {
          "format": "java",
          "type": "@ref:com.mulesoft.connector.salesforce.pubsub.api.param.CustomReplayIdReplayOption"
        },
        {
          "format": "java",
          "type": "@ref:com.mulesoft.connector.salesforce.pubsub.api.param.FromOsReplayIdReplayOption"
        }
      ],
      "baseType": {
        "format": "java",
        "type": "@ref:com.mulesoft.connector.salesforce.pubsub.api.param.ReplayOption"
      }
    }],
    "modelProperties": {},
    "constructs": [],
    "connectionProviders": [],
    "version": "1.0.1",
    "privilegedArtifacts": [],
    "importedTypes": [{
      "format": "java",
      "annotations": {
        "extensibleType": {},
        "classInformation": {
          "implementedInterfaces": [],
          "parent": "",
          "classname": "org.mule.runtime.api.store.ObjectStore",
          "hasDefaultConstructor": false,
          "isInstantiable": false,
          "isFinal": false,
          "genericTypes": [],
          "isInterface": true,
          "isAbstract": true,
          "isMap": false
        },
        "typeId": "org.mule.runtime.api.store.ObjectStore",
        "typeAlias": {"value": "ObjectStore"}
      },
      "type": "Object",
      "fields": []
    }],
    "xmlDsl": {
      "schemaVersion": "1.0.1",
      "prefix": "salesforce-pub-sub",
      "schemaLocation": "http://www.mulesoft.org/schema/mule/salesforce-pub-sub/current/mule-salesforce-pub-sub.xsd",
      "namespace": "http://www.mulesoft.org/schema/mule/salesforce-pub-sub",
      "xsdFileName": "mule-salesforce-pub-sub.xsd"
    },
    "operations": [],
    "vendor": "Mulesoft",
    "name": "Salesforce PubSub",
    "privilegedPackages": [],
    "category": "SELECT",
    "notifications": [],
    "errors": [
      {
        "parent": "MULE:CRITICAL",
        "error": "SALESFORCE-PUB-SUB:SERVER_ERROR",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:CRITICAL",
        "handleable": true
      },
      {
        "error": "MULE:ANY",
        "handleable": true
      },
      {
        "parent": "MULE:RETRY_EXHAUSTED",
        "error": "SALESFORCE-PUB-SUB:RETRY_EXHAUSTED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:RETRY_EXHAUSTED",
        "handleable": true
      },
      {
        "parent": "MULE:CONNECTIVITY",
        "error": "SALESFORCE-PUB-SUB:CONNECTIVITY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:CONNECTIVITY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "SALESFORCE-PUB-SUB:LIMIT_EXCEEDED",
        "handleable": true
      },
      {
        "parent": "MULE:VALIDATION",
        "error": "SALESFORCE-PUB-SUB:INVALID_INPUT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:VALIDATION",
        "handleable": true
      },
      {
        "parent": "MULE:CONNECTIVITY",
        "error": "SALESFORCE-PUB-SUB:TIMEOUT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:SECURITY",
        "handleable": true
      },
      {
        "parent": "MULE:CONNECTIVITY",
        "error": "SALESFORCE-PUB-SUB:MUTUAL_AUTHENTICATION_FAILED",
        "handleable": true
      },
      {
        "parent": "MULE:CONNECTIVITY",
        "error": "SALESFORCE-PUB-SUB:NOT_FOUND",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "SALESFORCE-PUB-SUB:FAULTY_RESPONSE",
        "handleable": true
      },
      {
        "parent": "MULE:SECURITY",
        "error": "SALESFORCE-PUB-SUB:SECURITY",
        "handleable": true
      }
    ]
  }
}